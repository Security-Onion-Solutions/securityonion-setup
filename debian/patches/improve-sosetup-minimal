Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-setup (20120912-0ubuntu0securityonion307) xenial; urgency=medium
 .
   * improve sosetup-minimal
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-setup-20120912.orig/bin/sosetup-minimal
+++ securityonion-setup-20120912/bin/sosetup-minimal
@@ -82,34 +82,69 @@ function tune() {
 		sed -i 's|DOMAIN_STATS_ENABLED="yes"|DOMAIN_STATS_ENABLED="no"|g' $CONF
 	fi
 
-	# reconfigure Elasticsearch and Logstash
-	if ! grep -q "LOGSTASH_MINIMAL" /etc/nsm/securityonion.conf; then
+	# tune elasticsearch if running
+	if docker ps |grep elasticsearch >/dev/null 2>&1; then
 		echo -e "XXX\n40\nPlease wait while stopping Elasticsearch...\nXXX"
 		/usr/sbin/so-elasticsearch-stop >/dev/null 2>&1
-		echo -e "XXX\n50\nPlease wait while stopping Logstash...\nXXX"
-		/usr/sbin/so-logstash-stop >/dev/null 2>&1
-		echo -e "XXX\n60\nPlease wait while optimizing and restarting Elasticsearch...\nXXX"
-		echo >> /etc/nsm/securityonion.conf
-		echo 'LOGSTASH_MINIMAL="yes"' >> /etc/nsm/securityonion.conf
 		# Elasticsearch heap may be set to 600 or 1000 depending on Evaluation or Production Mode
 		sed -i 's|-Xms1000m|-Xms200m|g' /etc/elasticsearch/jvm.options
 		sed -i 's|-Xmx1000m|-Xmx200m|g' /etc/elasticsearch/jvm.options
-		sed -i 's|-Xms600m|-Xms200m|g' /etc/elasticsearch/jvm.options
-		sed -i 's|-Xmx600m|-Xmx200m|g' /etc/elasticsearch/jvm.options
+		sed -i 's|-Xms600m|-Xms200m|g' 	/etc/elasticsearch/jvm.options
+		sed -i 's|-Xmx600m|-Xmx200m|g' 	/etc/elasticsearch/jvm.options
 		CLUSTER_NAME=$(grep "cluster.name" /etc/elasticsearch/elasticsearch.yml | tail -1 | cut -d\" -f2)
 		rm -f /var/log/elasticsearch/${CLUSTER_NAME}.log
+		echo -e "XXX\n50\nPlease wait while optimizing and restarting Elasticsearch...\nXXX"
 		/usr/sbin/so-elasticsearch-start >/dev/null 2>&1
-		echo -e "XXX\n70\nPlease wait while optimizing and restarting Logstash...\nXXX"
+	fi
+
+	# tune logstash if running
+	if docker ps |grep logstash >/dev/null 2>&1; then
+		echo -e "XXX\n60\nPlease wait while stopping Logstash...\nXXX"
+		/usr/sbin/so-logstash-stop >/dev/null 2>&1
+
+		# Reconfigure
+		if ! grep -q "LOGSTASH_MINIMAL" /etc/nsm/securityonion.conf; then
+			echo >> /etc/nsm/securityonion.conf
+			echo 'LOGSTASH_MINIMAL="yes"' >> /etc/nsm/securityonion.conf
+		fi
 		sed -i 's|30s|1s|g' /etc/logstash/*-template.json
 		sed -i 's|-Xms2000m|-Xms200m|g' /etc/logstash/jvm.options
 		sed -i 's|-Xmx2000m|-Xmx200m|g' /etc/logstash/jvm.options
+
+		if [ "$LOGSTASH_INPUT_REDIS" = "yes" ]; then
+			# this is a storage node consuming from redis
+			# need to add an input if it doesn't already exist
+			INPUT_REDIS_CONF="/etc/logstash/conf.d.minimal/0900_input_redis.conf"
+			if ! [ -f $INPUT_REDIS_CONF ]; then
+cat << EOF >> $INPUT_REDIS_CONF
+input {
+	redis {
+		host => '172.18.0.1'
+		data_type => 'list'
+		key => 'logstash:redis'
+		type => 'redis-input'
+		# threads => 1
+	}
+}
+EOF
+			fi
+		fi
+		echo -e "XXX\n70\nPlease wait while optimizing and restarting Logstash...\nXXX"
 		/usr/sbin/so-logstash-start >/dev/null 2>&1
 		echo -e "XXX\n80\nPlease wait while services initialize (may be a few minutes)...\nXXX"
-		until fgrep -qs "adding template [logstash" /var/log/elasticsearch/${CLUSTER_NAME}.log; do
-			sleep 1s
-		done
+		# If logstash outputs to Elasticsearch, we can check Elasticsearch log for initialization
+		# Otherwise, logstash is outputting to Redis and we can skip this
+		if [ "$LOGSTASH_OUTPUT_REDIS" != "yes" ]; then
+			until fgrep -qs "adding template [logstash" /var/log/elasticsearch/${CLUSTER_NAME}.log; do
+				sleep 1s
+			done
+		fi
 	fi
 }
 
+# Run the tune function and output a progress bar
 TEXT="Please wait while making changes to the system..."
 tune | whiptail --title="$TITLE" --gauge "$TEXT" 6 75 0
+
+TEXT="sosetup-minimal is now complete!"
+whiptail --title="$TITLE" --msgbox "$TEXT" 10 75
