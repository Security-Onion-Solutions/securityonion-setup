Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-setup (20120912-0ubuntu0securityonion304) xenial; urgency=medium
 .
   * adjust crossclustercheck
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-setup-20120912.orig/bin/sosetup
+++ securityonion-setup-20120912/bin/sosetup
@@ -1049,11 +1049,12 @@ if [ "$SERVER" -ne 1 ]; then
 	fi
 
 	# Need to open ports in server firewall to allow connections from sensor
-	echo "IPADDRESS=\`who -m --ips | awk '{print \$5}' |cut -d\( -f2 | cut -d\) -f1\`" >> $SOSETUPSCP
-	echo "ufw allow proto tcp from \$IPADDRESS to any port 22,4505,4506,7736" >> $SOSETUPSCP
+	echo "IPADDRESS=\`who -m --ips | awk '{print \$5}' |cut -d\( -f2 | cut -d\) -f1\`" 	>> $SOSETUPSCP
+	echo "ufw allow proto tcp from \$IPADDRESS to any port 22,4505,4506,7736" 		>> $SOSETUPSCP
 
 	# Need to run so-elastic-network and write output to file so we can read it later
-	echo "/usr/sbin/so-elastic-network > /tmp/so-elastic-network.txt" >> $SOSETUPSCP
+	echo "/usr/sbin/so-elastic-network > /tmp/so-elastic-network.txt" 	>> $SOSETUPSCP
+	echo "/usr/sbin/so-crossclustercheck > /tmp/so-crossclustercheck.txt" 	>> $SOSETUPSCP
 
 	# Need to whitelist sensor IP address to prevent Active Response
 	cat << EOF >> $SOSETUPSCP
@@ -1994,6 +1995,7 @@ EOF
 		# We need to determine a few things from the master server:
 		# DOCKER_INTERFACE, DOCKER_NETWORK, and REVERSE_PORT
 		# DOCKER_INTERFACE and DOCKER_NETWORK come from /tmp/so-elastic-network.txt that was created from the previous SOSETUPSCP
+		# REVERSE_PORT comes from /tmp/so-crossclustercheck.txt that was created from the previous SOSETUPSCP
 
 		# DOCKER_INTERFACE
 		DOCKER_INTERFACE=$(ssh -i "$KEY" $SSH_USERNAME@$SERVERNAME cat /tmp/so-elastic-network.txt | jq '.[0].IPAM.Config[0].Gateway' | cut -d\" -f2)
@@ -2004,7 +2006,7 @@ EOF
 		echo "DOCKER_NETWORK is $DOCKER_NETWORK" >> $LOG 2>&1
 
 		# REVERSE_PORT
-		SSH_CMD='/usr/sbin/so-crossclustercheck | jq "." | grep ":5" | cut -d: -f2 | cut -d\" -f1 | sort | tail -1'
+		SSH_CMD='cat /tmp/so-crossclustercheck.txt | jq "." | grep ":5" | cut -d: -f2 | cut -d\" -f1 | sort | tail -1'
 		HIGHEST_REVERSE_PORT=`ssh -i $KEY $SSH_USERNAME@$SERVERNAME "$SSH_CMD"`
 		if [ "$HIGHEST_REVERSE_PORT" = "" ]; then
 			echo "Found no other nodes." >> $LOG 2>&1
